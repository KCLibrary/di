/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 */
 
 @import "susybase";

 
/* Containers for grid items and flow items. */
#header,
#navigation,
#page,
#footer {
	margin-left: auto;
  	margin-right: auto;
	@include container();
}

/* Apply the shared properties of grid items in a single, efficient ruleset. */
#header,
#content,
#navigation,
.sidebar.first,
.sideavr.second,
#footer {
}

.no-sidebars {
	#content {
		@include span(isolate 16 at 2);
	}
}
#header, #navigation {
	.container {
	@include span(full);
	}
}



/**
 * Use 18 grid columns for larger screens.
 */
@media all and (min-width: 960px) {
		
  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first {
    #content {
       @include span(11 last);
    }

    #sidebar-first {
      @include span(6 first);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    #content {
       @include span(isolate 10 at 2);
    }

    .sidebar.second {
      @include span(isolate 5.5 at 13);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    #content {
       @include span(isolate 8 at 6);
    }

    .sidebar.first {
      @include span(5 first);
    }

    .sidebar.second {
      @include span(5 last);
    }
  }
}
